@model IEnumerable<Expense>
@using Microsoft.AspNetCore.Html;

@{
    Layout = null;
    var currentURL = Context.Request.Path.ToString().ToLower();
    int userId = int.TryParse(User.FindFirstValue("CustomUserId"), out int tempUserId) ? tempUserId : -1;

    string borderColor = "";
}

<div id="expCollection" onload="autoFocus()">
    <div class="row bg-dark sticky-top">
        <div class="col col-2 pe-1">
            @* ADD EXPENSE *@
            @if (currentURL.Contains("/trips"))
            {
                <button class="btn btn-sm btn-outline-warning w-100 h-100 rounded"
                        hx-get="@Url.Action("Create", "Expenses", new {  tripId =  ViewBag.TripId })"
                        hx-target="#createExpense">
                    + Expense
                </button>
            }
            </div>

            <div class="col ps-1">
            <div class="btn-group align-items-end bg-dark flex-wrap">
                <button class="btn btn-sm btn-outline-secondary"
                        hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId, sortOrder = ViewBag.NameSortParam, searchString = ViewBag.SearchString , creator = ViewBag.Creator, categoryFilter = ViewBag.CategoryFilter})"
                        hx-target="#expCollection"
                >
                    @Html.DisplayNameFor(model => model.Name)
                </button>
                <button class="btn btn-sm btn-outline-secondary"
                        hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId, sortOrder = ViewBag.AmmSortParam, searchString= ViewBag.SearchString, creator = ViewBag.Creator, categoryFilter = ViewBag.CategoryFilter})"
                        hx-target="#expCollection"
                >
                    Amount
                </button>
                <button class="btn btn-sm btn-outline-secondary"
                        hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId, sortOrder = ViewBag.DateSortParam, searchString = ViewBag.SearchString, creator = ViewBag.Creator, categoryFilter = ViewBag.CategoryFilter})"
                        hx-target="#expCollection"
                >
                    @Html.DisplayNameFor(model => model.Date)
                </button>

                @*<input type="hidden" name="filterString" value="off">
                <input type="checkbox" class="form-check-input btn-check" id="checkbox" name="filterString" value="@ViewBag.FilterString"
                       hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId})"
                       hx-target="#expCollection"
                       onclick="this.previousSibling.value = this.checked ? 'on' : 'off';">
                <label class="btn btn-sm btn-outline-warning" for="checkbox">CreatedByMe</label>*@

                <select id="categoryDropdown" name="categoryFilter" class="btn btn-sm btn-outline-secondary"
                        hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId})"
                        hx-target="#expCollection">
                    >
                    <option value="">@(ViewBag.CategoryFilter == null ? "Select Category": ViewBag.CategoryFilter)</option>
                    @foreach (var category in Expense.Categories)
                        {
                            <option value="@category">@category</option>
                        }
                    <option value="">None</option>
                </select>
                

                @* <button class="btn btn-sm btn-outline-secondary" id="creator" name="creator" value="@ViewBag.Creator"
                        hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId})"
                        hx-target="#expCollection">
                    CreatedByMe
                </button> *@

                <input type="checkbox" class="btn-check" id="creator" name="creator" autocomplete="off" value="true">
                <label class="btn btn-sm btn-outline-secondary" for="creator" name="creator" value="true"
                       hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId})"
                       hx-target="#expCollection">CreatedByMe</label>


                <input type="text" id="searchInput" name="searchString" autocomplete="off" placeholder="search expense" value="@ViewBag.SearchString" class="btn btn-sm btn-outline-secondary bg-secondary-subtle"
                       hx-get="@Url.Action("Index", "Expenses", new { tripId = ViewBag.TripId , categoryFilter = ViewBag.CategoryFilter})"
                    hx-target="#expCollection"
                    hx-trigger="keyup changed delay:500ms" />


            </div>
            </div>
      
    </div>

    <ul class="list-group list-group-flush">
        <li class="list-group-item" id="createExpense">

        </li>

        @foreach (var expense in Model)
        {
            string payers = "";
            string owers = "";
            double expenseSum = 0;

            @foreach (var payment in expense.Payments)
            {
                if (payment.IsValid && !payment.IsOwed)
                {
                    payers += $"<span class=\"border border-light-subtle rounded bg-dark text-white-50\">{payment.Participant.UserName}</span>:  {string.Format("{0:C2}", payment.Ammount)} ";
                    expenseSum += payment.Ammount ?? 0;
                }
                if (payment.IsValid && payment.IsOwed)
                {
                    if (payment.IsEquallyShared)
                    {
                        owers += $"<span class=\"border border-light-subtle rounded bg-danger-subtle text-white-50\">{payment.Participant.UserName}</span> ";
                    }
                    else
                    {
                        owers += $"<span class=\"border border-light-subtle rounded bg-danger-subtle text-white-50\">{payment.Participant.UserName}</span>: {string.Format("{0:C2}", payment.Ammount)} ";
                    }
                }
            }

            var payersHtml = new HtmlString(payers);
            var owersHtml = new HtmlString(owers);

                @if (expense.CreatorId == userId)
                {
                    borderColor = "list-group-item-dark";
                }
                @if (expense.CreatorId == null)
                {
                    borderColor = "list-group-item-light";
                }


            <li class="list-group-item @borderColor">

                <div id="@("expense" + expense.Id)" hx-get="@Url.Action("Edit", "Expenses", new { tripId=expense.TripId, id = expense.Id })"
                                                hx-trigger="dblclick once">
                    <div class="row">
                        <div class="col">
                            <h5>@($"{expense.Name}")<small class="text-white-50">&nbsp;&nbsp;&nbsp;@($"{expense.Category}")</small></h5>
                        </div>
                        <div class="col text-end">
                            <i class="text-muted">@($"{expense.Date.ToShortDateString()}")</i>
                            <i class="text-muted">@($"Created by: {expense.Creator?.CustomUserName}")</i>
            
                        </div>
                    </div>
                    <div class="mb-2">
                        <b>@($"{expenseSum:C}")</b><i class="text-white-50"> - @Html.Raw(payers)</i><br>
                    </div>
                    <i class="text-white-50"><small>@Html.Raw(owers)</small></i>
                    @*<b>@($"{expenseSum:C}")</b>@payersHtml @owersHtml<br>*@
                </div>
            </li>
        }
    </ul>
</div>
